@import "styles/variables.scss";
@import "styles/mixins.scss";

$tab-count: 2;
$tab-width: 12.5rem;

.work {
  padding: $heading-size-xs 1rem 1rem;
  width: 100%;
  background: $color-navy;

  .maxWidth {
    max-width: $max-content-width;
    margin: 0 auto;

    h1 {
      @include text-gradient;
      text-align: center;
      font-size: $heading-size-sm;
      margin: 0 auto $heading-size-xs;
    }
  }
}

.wrapper {
  width: 100%;

  input,
  .indicator,
  .tabsContainer {
    display: none;
  }
}

.contentContainer {
  display: flex;
  flex-direction: column;
  gap: 1rem;

  .content {
    padding: 1rem;
    background: $color-purple;
    border-radius: $border-radius-sm;
    line-height: 1.25;

    .role {
      color: $color-yellow;
      font-size: $heading-size-xs;
      font-weight: 600;

      .at {
        display: none;
      }

      a {
        @include inline-link($color-orange);
      }
    }

    .range {
      font-size: $body-size-sm;
    }

    ul {
      li {
        position: relative;
        padding-left: 2rem;
        margin-bottom: 0.25rem;

        &:before {
          content: "âœ§";
          position: absolute;
          left: 0;
          color: $color-yellow;
        }
      }
    }
  }
}

@media screen and (min-width: $breakpoint-sm) {
  .work {
    padding: $heading-size-sm 1.5rem 1.5rem;

    .maxWidth h1 {
      font-size: $heading-size-md;
      margin-bottom: $heading-size-sm;
    }
  }

  .wrapper {
    max-width: 40rem;
    margin: 0 auto;
  }

  .contentContainer {
    gap: 1.5rem;

    .content {
      padding: 1.5rem;
    }
  }
}

@media screen and (min-width: $breakpoint-md) {
  .work {
    padding: $heading-size-md 2rem 2rem;

    .maxWidth h1 {
      font-size: $heading-size-lg;
      margin-bottom: $heading-size-md;
    }
  }

  .wrapper {
    max-width: 52.5rem;
    display: grid;
    grid-template-columns: $tab-width 1fr;
    position: relative;
    background: $color-purple;
    border-radius: $border-radius-lg;

    input {
      @for $i from 1 through $tab-count {
        &:nth-of-type(#{$i}):checked {
          // active label
          ~ .tabsContainer > label:nth-child(#{$i}) {
            color: $color-yellow;
          }

          // active tab indicator
          ~ .indicator {
            transform: translateY(#{($i - 1) * $tab-height});
          }

          // active content
          ~ .contentContainer > .content:nth-child(#{$i}) {
            display: block;
          }
        }
      }
    }

    .indicator {
      display: block;
      position: absolute;
      height: $tab-height;
      width: $tab-width;
      background: $color-orange;
      border-radius: $border-radius-lg 0 0 $border-radius-lg;
      transition: 0.25s ease;
      transition-delay: 0.1s;
    }

    .tabsContainer {
      display: flex;
      flex-direction: column;

      label {
        display: flex;
        justify-content: center;
        align-items: center;
        height: $tab-height;
        cursor: pointer;
        position: relative;
        font-size: $body-size-md;
        font-weight: 600;

        &:hover,
        &:focus,
        &:active {
          color: $color-yellow;
        }
      }
    }
  }

  .contentContainer {
    display: block;
    height: 18rem;
    border-left: 2px solid $color-navy;

    .content {
      display: none;
      animation: fadeIn 500ms;
      background: transparent;
      border-radius: 0;

      .role {
        h3 {
          display: inline-block;
        }

        .at {
          display: inline-block;
        }
      }
    }
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(5%);
  }
  to {
    opacity: 1;
    transform: translateY(0%);
  }
}
